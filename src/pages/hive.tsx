import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import Layout from "@/components/Layout";
import {Line} from "react-chartjs-2";
import { Bar } from 'react-chartjs-2';
import { CountdownCircleTimer } from 'react-countdown-circle-timer'
import {
    Chart as ChartJS,
    CategoryScale,
    LinearScale,
    PointElement,
    LineElement,
    Title,
    Tooltip,
    Legend,
    BarElement,
} from 'chart.js';

ChartJS.register(
    CategoryScale,
    LinearScale,
    PointElement,
    LineElement,
    Title,
    Tooltip,
    Legend,
    BarElement
);


const inter = Inter({ subsets: ['latin'] })

const renderTime = ({ remainingTime }:any) => {
    const hours = Math.floor(remainingTime / 3600)
    const minutes = Math.floor((remainingTime % 3600) / 60)
    const seconds = remainingTime % 60

    return (
        <div className="timer flex flex-col justify-center items-center">
            <p className="font-bold text-white text-md">Time till first sale</p>
            <p className="font-bold text-white text-3xl">{hours}:{minutes}:{seconds}</p>
        </div>
    );
};

const tableData=[
    {
        name:'Roblox',
        users:1234,
        price:1234,
    },
    {
        name:'McDonalds',
        users:1234,
        price:1234,
    },
    {
        name:'SandBox',
        users:1234,
        price:1234,
    },
    {
        name:'Meta',
        users:1234,
        price:1234,
    },
    {
        name:'Hive',
        users:1234,
        price:1234,
    },
]

const labels = ['Feb', 'Mar', 'Apr', 'Jun','Jul'];

export const data = {
    labels,
    datasets: [
        {
            label: 'BrainTonNFT',
            data: [58, 16, 27, 1,50],
            borderColor: '#FFB803',
            backgroundColor: '#FFB803',
            borderRadius:4,
            lineTension:0.2
        },
        {
            label: 'Freetonbomb',
            data: [35, 90, 73, 40, 12],
            borderColor: '#FF3F4E',
            backgroundColor: '#FF3F4E',
            borderRadius:4,
            lineTension:0.3
        },
        {
            label: 'Web3ton',
            data: [20,18,99,46,68],
            borderColor: '#A34EDF',
            backgroundColor: '#A34EDF',
            borderRadius:4,
            lineTension:0.3
        },
        {
            label: 'TonBoom',
            data: [32, 51, 14, 84, 88],
            borderColor: '#FFF',
            backgroundColor: '#FFF',
            borderRadius:4,
            lineTension:0.2
        },
        {
            label: 'Anonimous',
            data: [49, 9, 38, 41, 82],
            borderColor: '#C2F970',
            backgroundColor: '#C2F970',
            borderRadius:4,
        },


    ],
};


const chartOptions={
    scales : {
        x:{
            grid:{
                display:false
            },
            ticks:{
                font:{
                    weight:'bold',
                    family: 'Roboto',
                    size:16
                }
            }
        },
        y:{
            ticks:{
                font:{
                    weight:'bold',
                    family: 'Roboto',
                    size:12
                },

            }
        }
    },
    plugins: {
        legend: {
            labels: {
                // This more specific font property overrides the global property
                font: {
                    family:"Roboto",
                    weight:'bold',
                    size:14
                },
                usePointStyle:true,

            }
        },
        datalabels:{
            font:{
                weight: 'bold'
            }
        }
    }
}
ChartJS.defaults.color='#fff';
ChartJS.defaults.borderColor='#fff';


export default function Home() {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
        <Layout title={'Hive'}>
            <div className={'grid grid-cols-2 gap-8 p-4 items-start'}>
                <div className={'bg-offset w-full p-4'}>
                    {data.datasets.map((item,counter)=>{
                        return <div key={item.label} className={'grid border-b-[1px] border-white my-3 py-2 items-center grid-cols-8'}>
                            <div className={'w-10 aspect-square relative'}>
                                <Image src={`/images/metaverses/logos/${item.label}.png`} alt={'brain'} layout={'fill'}></Image>
                            </div>
                            <p className={'text-white text-lg col-span-2 font-bold'}>{counter+1}. {item.label}</p>
                            {item.data.map((dataset)=>{
                                return <p key={dataset} className={'text-white text-lg col-span-1 text-center font-bold'}>{dataset}</p>
                            })}
                        </div>
                    })}
                </div>
                <div className={'flex flex-col items-center'}>
                    <div className={'p-5 w-full mb-5 bg-offset rounded-xl'}>
                        <Bar options={chartOptions} data={data}></Bar>
                    </div>
                    <p className={'text-2xl font-bold text-white'}>Conversion</p>
                </div>
                <div className={'grid w-full col-span-2 grid-cols-2 grid-rows-2 gap-5'}>
                    <div className={'p-5 w-full mb-5 bg-white flex flex-col items-center bg-offset rounded-xl '}>
                        <p className={'text-white self-start mb-3 font-bold text-2xl'}>MF</p>
                        <Line options={chartOptions} data={data}></Line>
                    </div>
                    <div className={'p-5 w-full mb-5 bg-white flex flex-col items-center bg-offset rounded-xl '}>
                        <p className={'text-white self-start mb-3 font-bold text-2xl'}>Header</p>
                        <Line options={chartOptions} data={data}></Line>
                    </div>
                    <div className={'p-5 w-full mb-5 bg-white flex flex-col items-center bg-offset rounded-xl '}>
                        <p className={'text-white self-start mb-3 font-bold text-2xl'}>LTV</p>
                        <Line options={chartOptions} data={data}></Line>
                    </div>
                    <div className={'p-5 w-full mb-5 bg-white flex flex-col items-center bg-offset rounded-xl '}>
                        <p className={'text-white self-start mb-3 font-bold text-2xl'}>Retention</p>
                        <Line options={chartOptions} data={data}></Line>
                    </div>

                </div>
            </div>
        </Layout>
    </>
  )
}
